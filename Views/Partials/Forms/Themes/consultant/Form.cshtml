@inherits WebViewPage<FormViewModel>
@using Umbraco.Forms.Core
@using Umbraco.Forms.Mvc
@using Umbraco.Forms.Mvc.Models
@using Umbraco.Forms.Mvc.BusinessLogic
@{ 
    if (Model.DisableDefaultStylesheet == false){
        Html.SetFormThemeCssFile(Model, "~/App_Plugins/UmbracoForms/Assets/Themes/Default/style.css");
    }
    int i = 0;
}
<div class="umbraco-forms-page">
    <h2>Fast-track your treatment with @Model.Content.Name:</h2>
    @if (Model.ShowValidationSummary){
        @Html.ValidationSummary(false)
    }
    @foreach (FieldsetViewModel fs in Model.CurrentPage.Fieldsets){
        <fieldset class="umbraco-forms-fieldset" id="@fs.Id">
            @if (string.IsNullOrEmpty(fs.Caption) == false){
                <p>@fs.Caption</p>
            }
            <div class="row">
                @foreach (var c in fs.Containers){
                    i++;
                    <div class="umbraco-forms-container col">
                        @foreach (FieldViewModel f in c.Fields){
                            bool hidden = f.HasCondition && f.ConditionActionType == FieldConditionActionType.Show;
                            <div class="@Html.GetFormFieldWrapperClass(f.FieldTypeName) @f.CssClass" @{ if (hidden) { <text> style="display: none" </text>   } }>
                                @if (!f.HideLabel){
                                    <label for="@f.Id" class="umbraco-forms-label">
                                        @f.Caption @if (f.ShowIndicator){
<span class="umbraco-forms-indicator">@Model.Indicator</span>
                                        }
                                    </label>
                                }
                                @if (!string.IsNullOrEmpty(f.ToolTip)){
                                    <span class="umbraco-forms-tooltip help-block">@f.ToolTip</span>
                                }
<div class="umbraco-forms-field-wrapper">
                                    @Html.Partial(FormThemeResolver.GetFieldView(Model, f), f)
                                    @if (Model.ShowFieldValidaton){
                                        @Html.ValidationMessage(f.Id)
                                    }
</div>
</div>
                        }
                        @if (i == fs.Containers.Count){
<input type="submit" class="btn primary" value="@Model.SubmitCaption"  name="__next" />
                        }
                    </div>
                }
            </div>
        </fieldset>
    }
    <div style="display: none">
        <input type="text" name="@Model.FormId.ToString().Replace("-", "")" />
    </div>
</div>