@inherits Umbraco.Web.Mvc.UmbracoTemplatePage<ContentModels.ConsultatList>
@using ContentModels = Umbraco.Web.PublishedContentModels;
@{
  Layout = "Master.cshtml";
  List<IPublishedContent> consultants = new List<IPublishedContent>(Umbraco.Content(1155).Children().Where("Visible"));
  string consultantsJson = "";
  List<IPublishedContent> specialities = new List<IPublishedContent>(Umbraco.Content(1154).Children().Where("Visible"));
  string  specialitiesJson = "\"";
  foreach (var speciality in specialities){
    specialitiesJson += speciality.Name  + "\",\"";
  }
  specialitiesJson += "\"";
  
}
<div class="maincontent">
  <div class="container">
    <form class="form-inline">
      <div class="form-group mx-sm-2 mb-2">
        <label for="searchName" class="sr-only">Search by name</label>
        <input type="text" class="form-control typeahead" id="searchName" placeholder="Search by name..." />
      </div>
      <div class="form-group mx-sm-2 mb-2">
        <label for="searchSpeciality" class="sr-only">Search by speciality</label>
        <input type="text" class="form-control typeahead" id="searchSpeciality" placeholder="Search by speciality..." />
      </div>
      <div class="form-group mx-sm-2 mb-2">
        <label for="selectLocation">Select location</label>
        <select class="form-control" id="selectLocation">
          <option>All locations</option>
          <option>Circle Bath Hospital</option>
          <option>Circle Nottingham</option>
          <option>Circle Reading Hospital</option>
        </select>
      </div>
      <div class="form-group mx-sm-2 mb-2">
        <button type="submit" onclick="sort();">Update results</button>
      </div>
    </form>
  </div>
  <div class="consultants">
    <div class="container">
      <div class="row">
        @foreach(var consultant in consultants){
          string image = "";
          if(consultant.HasValue("profileImage")){
            image = (string)consultant.GetPropertyValue<IPublishedContent>("profileImage").GetCropUrl("thumb");
          }
          string speciality = (string)consultant.GetPropertyValue("customSpeciality");
          string location = (string)consultant.GetPropertyValue("location");
          consultantsJson += "{n:\"" + consultant.Name + "\",s:\"" + speciality + "\",l:\"" + location + "\"},";
          <div class="col-md-4">
            <a href="@consultant.Url">
              <img src="@image" alt="@consultant.Name is a @speciality at Circle @location" />
              <div>
                <h3 class="normal">@consultant.Name</h3>
                <p class="smaller">@speciality</p>
                <p class="smaller">Circle @location</p>
              </div>
            </a>
          </div>
        }
      </div>
    </div>
  </div>
</div>
<script src="/scripts/jquery3.3.1.js"></script>
<script src="https://twitter.github.io/typeahead.js/releases/latest/typeahead.jquery.js"></script>
<script>
  var consultants = [ @Html.Raw(consultantsJson) ];
  var specialities = [ @Html.Raw(specialitiesJson) ]
  console.log(consultants);
  var sort = function(){
    for(var consultant in consultants){
      console.log("hi");
    }
  }
  var substringMatcher = function(strs) {
  return function findMatches(q, cb) {
    var matches, substringRegex;

    // an array that will be populated with substring matches
    matches = [];

    // regex used to determine if a string contains the substring `q`
    substrRegex = new RegExp(q, 'i');

    // iterate through the pool of strings and for any string that
    // contains the substring `q`, add it to the `matches` array
    $.each(strs, function(i, str) {
      if (substrRegex.test(str)) {
        matches.push(str);
      }
    });

    cb(matches);
  };
};

var states = ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California',
  'Colorado', 'Connecticut', 'Delaware', 'Florida', 'Georgia', 'Hawaii',
  'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana',
  'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota',
  'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire',
  'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota',
  'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island',
  'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont',
  'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'
];

$('#the-basics .typeahead').typeahead({
  hint: true,
  highlight: true,
  minLength: 1
},
{
  name: 'states',
  source: substringMatcher(states)
});
</script>